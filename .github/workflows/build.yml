name: "Build GKI Kernels"

env:
  OUT_DIR: "${{ github.workspace }}/out"

on:
  workflow_dispatch:

jobs:
  Set-repos:
    name: "🐂 Parse repos.json"
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.generate-matrix.outputs.repos }}
      builddate: ${{ steps.generate-builddate.outputs.builddate }}
    steps:
      - name: "😄 Checkout"
        uses: actions/checkout@v3

      - name: "😆 Generate Matrix"
        id: generate-matrix
        run: |
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          jq -s '[.[][]]' repos/repos*.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: "⏰ Set builddate"
        id: generate-builddate
        run: echo "builddate=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  Build-Kernel:
    name: "🐎 Build GKI Kernel"
    runs-on: ubuntu-latest
    needs: Set-repos
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        repos: ${{ fromJSON(needs.Set-repos.outputs.repos) }}
    env:
      WORKSPACE: ${{ github.workspace }}
      builddate: "${{ needs.Set-repos.outputs.builddate }}"

      KERNEL_NAME: ${{ matrix.repos.kernelSource.name }}
      KERNEL_REPO: ${{ matrix.repos.kernelSource.repo }}
      KERNEL_BRANCH: ${{ matrix.repos.kernelSource.branch }}
      KERNEL_DEVICE: ${{ matrix.repos.kernelSource.device }}
      DEFCONFIG_NAME: ${{ matrix.repos.kernelSource.defconfig }}

      withKernelSU: ${{ matrix.repos.withKernelSU }}
      ccache: ${{ matrix.repos.ccache }}
      useAnykernel: ${{ matrix.repos.AnyKernel3.use }}
      release: ${{ matrix.repos.AnyKernel3.release }}

    steps:
      - name: "⭐ Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu lld gcc-arm-linux-gnueabi libssl-dev libfl-dev
          sudo apt-get install -y curl git ccache zip unzip tar gzip bzip2

      - name: "🌟 Clone kernel source => (${{ env.KERNEL_REPO }})"
        run: |
          git clone --recursive --depth=1 -b $KERNEL_BRANCH $KERNEL_REPO $KERNEL_NAME
          echo "🤔 Cloned kernel source from $KERNEL_REPO"

      - name: 🔢 Extract kernel version
        working-directory: ${{ env.KERNEL_NAME }}
        run: |
          kernel_version=$(grep "^VERSION = " Makefile | cut -d ' ' -f 3)
          patchlevel=$(grep "^PATCHLEVEL = " Makefile | cut -d ' ' -f 3)
          sublevel=$(grep "^SUBLEVEL = " Makefile | cut -d ' ' -f 3)
          local_kernel_version="${kernel_version}.${patchlevel}.${sublevel}"
          echo "Kernel Version: $local_kernel_version"
          echo "KERNEL_VERSION=${local_kernel_version}" >> $GITHUB_ENV

      - name: "😋 Setup GKI Build Environment"
        working-directory: ${{ env.KERNEL_NAME }}
        run: |
          echo "Setting up GKI build environment..."
          # Additional commands for GKI setup can be added here

      - name: "👍 Make defconfig"
        working-directory: ${{ env.KERNEL_NAME }}
        run: |
          make ${DEFCONFIG_NAME}

      - name: "🎶 Build GKI Kernel"
        working-directory: ${{ env.KERNEL_NAME }}
        run: |
          make -j$(nproc)

      - name: "💛 Upload Image"
        uses: actions/upload-artifact@v3
        with:
          name: Image-${{ env.KERNEL_NAME }}
          path: ${{ env.OUT_DIR }}/arch/arm64/boot/Image
          if-no-files-found: ignore
          retention-days: 7

      - name: "💙 Upload dtb"
        uses: actions/upload-artifact@v3
        with:
          name: dtb-${{ env.KERNEL_DEVICE }}
          path: ${{ env.OUT_DIR }}/arch/arm64/boot/dtb.img
          if-no-files-found: ignore
          retention-days: 7

      - name: "❤️ Create GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.run_number }}
          name: "GKI Kernel Release"
          body: "Kernel build for device: ${{ env.KERNEL_DEVICE }}"
          files: |
            ${{ github.workspace }}/${{ env.KERNEL_NAME }}.zip
