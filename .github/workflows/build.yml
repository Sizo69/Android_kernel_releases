name: Build GKI Kernel

on:
  workflow_dispatch:
    inputs:
      kernel_version:
        description: 'Kernel version to build'
        required: true
      kernel_repo:
        description: 'Kernel repository URL'
        required: true
      kernel_branch:
        description: 'Kernel branch to build from'
        required: true

jobs:
  build-gki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Kernel Repo
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.kernel_repo }}
          ref: ${{ github.event.inputs.kernel_branch }}

      - name: Checkout Compiler Repo
        uses: actions/checkout@v2
        with:
          repository: <Your_Compiler_Repo_Link> # Add your compiler repo link here
          path: compiler

      - name: Checkout AnyKernel Repo
        uses: actions/checkout@v2
        with:
          repository: <Your_AnyKernel_Repo_Link> # Add your AnyKernel repo link here
          path: anykernel

      - name: Set up the environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git ccache libncurses-dev bison flex libssl-dev libelf-dev

      - name: Set up CCache
        run: |
          export CCACHE_DIR=$HOME/.ccache
          ccache -M 2G

      - name: Clean previous build artifacts
        run: |
          rm -rf out/*

      - name: Configure Kernel
        run: |
          make ARCH=arm64 O=out gki_defconfig

      - name: Compile Kernel
        run: |
          make -j$(nproc) ARCH=arm64 O=out CROSS_COMPILE=compiler/bin/your-compiler-prefix- 2>&1 | tee build.log

      - name: Create Artifact
        run: |
          cp out/arch/arm64/boot/Image.gz out/kernel-gki-${{ github.event.inputs.kernel_version }}.img

      - name: Prepare AnyKernel
        run: |
          cd anykernel
